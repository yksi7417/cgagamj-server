namespace mahjong;

enum Suit: ubyte {
  BAMBOO = 0,
  CHARACTER = 1,
  DOT = 2, 
  WINDS = 3, 
  DRAGONS = 4, 
  FLOWERS = 5, 
  SEASONS = 6
}

enum Wind: ubyte {
  NORTH = 0,
  SOUTH = 1,
  EAST = 2,
  WEST = 3
}


enum Dragons: ubyte {
  RED = 0,
  GREEN = 1,
  WHITE = 2
}


// To get from ubyte -> Tile, use the following algorithm
// start w/ bamboo - 9 tiles x 4 = 36
// then CHARACTER  - 9 times x 4 = 36
// then DOT        - 9 times x 4 = 36
// then WINDS      - 4 times x 4 = 16
// then DRAGONS    - 3 times x 4 = 12
// then FLOWERS    - 4 times x 1 =  4
// then SEASONS    - 4 times x 1 =  4
//                    total      =144 tiles 

table Tile {
    suit: ubyte;
    card_number: ubyte;
}

table Player {
  id: ulong;
  name: string;
  hidden_tiles: [ubyte];
  shown_tiles: [ubyte];
  account_balance: short ;
  seat: ubyte;
}

table Game {
  players: [Player];
  unused_tiles: [ubyte];
  discarded_tiles: [ubyte];
  current_wind: ubyte;     // it's the round of East, and East seat is the banker 
  current_turn: ubyte;     // represented by Wind, e.g.  it's South's turn
  current_round: short;   // represented by number 
}

root_type Game;
